from typing import List
import logging

logger = logging.getLogger(__name__)

class HTMLFormatter:
    @staticmethod
    def format_news_with_priority(news_items: List[str]) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏"""
        priority_keywords = [
            '–¶–ë', '—Å—Ç–∞–≤–∫–∞', '–∏–Ω—Ñ–ª—è—Ü–∏—è', '–ú–∏–Ω—Ñ–∏–Ω', '—Å–∞–Ω–∫—Ü–∏–∏',
            '–Ω–µ—Ñ—Ç—å', '–≥–∞–∑', '—Ä—É–±–ª—å', '–¥–æ–ª–ª–∞—Ä', '–µ–≤—Ä–æ', '–±–∏—Ä–∂–∞',
            '–í–í–ü', '—ç–∫–æ–Ω–æ–º–∏–∫–∞', '–∫—Ä–∏–∑–∏—Å', '–∏–Ω–¥–µ–∫—Å', '–∞–∫—Ü–∏–∏'
        ]

        blacklist = [
            '–ó–µ–ª–µ–Ω—Å–∫–∏–π', '–£–∫—Ä–∞–∏–Ω–∞', '—Å–ø–æ—Ä—Ç', '—Ñ—É—Ç–±–æ–ª',
            '—Ç–µ–Ω–Ω–∏—Å', 'COVID', '–∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å', '–≤–∞–∫—Ü–∏–Ω–∞'
        ]

        high_priority = []
        medium_priority = []

        for item in news_items:
            lower_item = item.lower()
            
            if any(bad.lower() in lower_item for bad in blacklist):
                continue
                
            if any(keyword.lower() in lower_item for keyword in priority_keywords):
                high_priority.append(item)
            else:
                medium_priority.append(item)

        message_parts = []
        if high_priority:
            message_parts.append("üî¥ <b>–í–ê–ñ–ù–´–ï –ù–û–í–û–°–¢–ò</b>")
            message_parts.extend(f"{i}. {item}" for i, item in enumerate(high_priority[:15], 1))
        
        if medium_priority:
            message_parts.append("\nüîµ <b>–î–†–£–ì–ò–ï –ù–û–í–û–°–¢–ò</b>")
            message_parts.extend(f"‚Ä¢ {item}" for item in medium_priority[:20])

        return "\n".join(message_parts) if message_parts else "‚ÑπÔ∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö –∑–Ω–∞—á–∏–º—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π"